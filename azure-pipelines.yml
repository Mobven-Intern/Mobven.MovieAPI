trigger:
- main

pool:
  name: Default
  demands:
  - agent.name -equals test-deneme


steps:
# - script: |
#     dotnet sonarscanner begin /k:"movie-project-api" /d:sonar.host.url="http://localhost:9000" /d:sonar.login="sqa_d61401827f15434a1621ea98e4a8914a8086f822"
#     dotnet build
#   displayName: 'Build'

# - script: |
#     dotnet sonarscanner end /d:sonar.login="sqa_d61401827f15434a1621ea98e4a8914a8086f822" 
#   displayName: 'SonarQube'

- powershell: |
    dotnet sonarscanner begin /k:"movie-project-api" /d:sonar.host.url="http://localhost:9000" /d:sonar.login="sqa_d61401827f15434a1621ea98e4a8914a8086f822"
    dotnet build
    dotnet sonarscanner end /d:sonar.login="sqa_d61401827f15434a1621ea98e4a8914a8086f822" 
    $qualityGateStatus = dotnet sonarscanner show-quality-gate-status /d:sonar.login="sqa_xxx" -d:sonar.verbose=true
    $status = $qualityGateStatus | Select-String -Pattern "Status: "
    if ($status -match "OK") {
        Write-Host "Quality gate passed. Pipeline succeeded."
        exit 0
    } else {
        Write-Host "Quality gate failed. Pipeline failed."
        exit 1
    }
    displayName: 'SonarQubeTEST'